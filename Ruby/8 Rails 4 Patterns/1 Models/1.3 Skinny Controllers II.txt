1.3 Skinny Controllers II

Now let's implement the add_to_item method. We want to call save only if bad_words? returns false. (Using a guard clause can help here..)


reviews_controller.rb
class ReviewsController < ApplicationController
  def create
    @item = Item.find(params[:review][:item_id])
    @review = @item.reviews.build(review_params)
    # start refactoring here...
    if @review.add_to_item
      redirect_to review, notice: 'Successfully created'
    else
      flash[:error] = 'Did not save review.'
      render :new
    end
  end

  def new
    @review = Review.new
  end

  def show
    @review = Review.find(params)
  end

  private

  def review_params
    params.require(:review).permit(:description)
  end
end


review.rb
class Review < ActiveRecord::Base
  belongs_to :item

  def add_to_item
    # Your code goes here
  end

  private
    def bad_words?
      description =~ /BAD_WORD/
    end
end


Answer:
review.rb
class Review < ActiveRecord::Base
  belongs_to :item

  def add_to_item
    # Your code goes here
    return if bad_words?
    self.save
  end

  private
    def bad_words?
      description =~ /BAD_WORD/
    end
end