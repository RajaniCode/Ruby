1.6 Non-AR Models - Part II

Now let's implement the #create method. First, we need to set user.is_approved to true if valid_background_check? returns true. Then we can call user.save to finish creating the user.


users_controller.rb
# We'll update this once we finish creating the UserRegistration class
#
class UsersController < ApplicationController
  def create
    @user = User.new(user_params)

    if valid_background_check?
      @user.is_approved = true
    end

    if @user.save
      redirect_to @user
    else
      render :new
    end
  end

  private

  def valid_background_check?
    !!(@user.valid_ssn? || @user.valid_address?)
  end

  def user_params
    params.require(:user).permit(:name, :email, :ssn, :address)
  end
end


user_registration.rb
class UserRegistration
  attr_reader :user

  def initialize(params)
    @user = User.new(params)
  end

  private

  def valid_background_check?
    !!(@user.valid_ssn? || @user.valid_address?)
  end
end


Answer:
user_registration.rb
class UserRegistration
  attr_reader :user

  def initialize(params)
    @user = User.new(params)
  end
  
  def create
    if valid_background_check?
      @user.is_approved = true
    end
    @user.save
  end
    
    
  private

  def valid_background_check?
    !!(@user.valid_ssn? || @user.valid_address?)
  end
end