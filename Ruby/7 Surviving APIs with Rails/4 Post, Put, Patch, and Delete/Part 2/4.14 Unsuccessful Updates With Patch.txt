4.14 Unsuccessful Updates With Patch

Now we need to write tests which ensure that clients cannot update existing humans with invalid data. We’ll intentionally issue a PATCH request with bad data to make sure our server reponds with the proper error.


test/integration/updating_humans_test.rb
class UpdatingHumansTest < ActionDispatch::IntegrationTest
  setup { @human = Human.create!(name: 'Robert', brain_type: 'small') }

  test 'unsuccessful update on bad name' do
    patch "/humans/#{@human.id}",
      { human: { name: 'Bobby' } }.to_json,
      { 'Accept' => Mime::JSON, 'Content-Type' => Mime::JSON.to_s }
  end
end


app/models/human.rb
class Human < ActiveRecord::Base
  validates :name, presence: true
end


1. On our human’s attribute, set the name property to nil.

test/integration/updating_humans_test.rb
class UpdatingHumansTest < ActionDispatch::IntegrationTest
  setup { @human = Human.create!(name: 'Robert', brain_type: 'small') }

  test 'unsuccessful update on bad name' do
    patch "/humans/#{@human.id}",
      { human: { name: nil } }.to_json,
      { 'Accept' => Mime::JSON, 'Content-Type' => Mime::JSON.to_s }
  end
end

2. Assert that the response status code is 422 - Unprocessable Entity.

test/integration/updating_humans_test.rb
class UpdatingHumansTest < ActionDispatch::IntegrationTest
  setup { @human = Human.create!(name: 'Robert', brain_type: 'small') }

  test 'unsuccessful update on bad name' do
    patch "/humans/#{@human.id}",
      { human: { name: nil } }.to_json,
      { 'Accept' => Mime::JSON, 'Content-Type' => Mime::JSON.to_s }
    
    assert_equal 422, response.status
  end
end