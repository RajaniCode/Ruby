6.4 Implementing Basic Auth

With both tests in place, it’s now time to implement our API’s authentication strategy using HTTP Basic Auth. We will head back to ApplicationController and add a callback, which will run for each request that comes in.


app/models/user.rb
class User < ActiveRecord::Base
  has_secure_password
  def self.authenticate(username, password)
    user = find_by(username: username)
    user && user.authenticate(password)
  end
end


app/controllers/application_controller.rb
class ApplicationController < ActionController::Base

  before_action :authenticate

  protected
    def authenticate
      authenticate_basic_auth
    end

    def authenticate_basic_auth
      # code here
    end
end


1. Implement the authenticate_basic_auth method. This method should call authenticate_with_http_basic, which takes a block with two arguments: username and password.

Answer:
app/controllers/application_controller.rb
class ApplicationController < ActionController::Base

  before_action :authenticate

  protected
    def authenticate
      authenticate_basic_auth
    end

    def authenticate_basic_auth
      # code here
      authenticate_with_http_basic do |username, password|
      end
    end
end


2. By using the username and password arguments from inside the block, authenticate the request by calling User.authenticate and passing in those same arguments.

Answer: 
app/controllers/application_controller.rb
class ApplicationController < ActionController::Base

  before_action :authenticate

  protected
    def authenticate
      authenticate_basic_auth
    end

    def authenticate_basic_auth
      # code here
      authenticate_with_http_basic do |username, password|
        User.authenticate(username, password)
      end
    end
end