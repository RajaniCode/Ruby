3. Capybara Integration Test


Rewrite the Rails integration test for viewing a Tweet with Capybara. 


tweets_controller.rb
class TweetsController < ApplicationController

  def show
    @tweet = Tweet.find(params[:id])
  end

end


show.html.erb
<h1><%= @tweet.status %></h1>
<p>Posted by <%= link_to @tweet.zombie.name, zombie_tweets_path(@tweet.zombie) %></p>


test/integration/tweet_display_status_test.rb
class TweetDisplaysStatusTest < ActionDispatch::IntegrationTest
  def setup
    @tweet = tweets(:hello_world)
  end
  test "Tweet displays status in heading" do
    get tweet_url(@tweet)
    assert_select 'h1', @tweet.status
  end
end


Answer:
test/integration/tweet_display_status_test.rb
require 'capybara/rails'
class TweetDisplaysStatusTest < ActionDispatch::IntegrationTest
  def setup
    @tweet = tweets(:hello_world)
  end

  test "Tweet displays status in heading" do
    visit tweet_url(@tweet)
    within("h1") do
      assert has_content?(@tweet.status)
    end  
  end
end


Test Output:
.

Finished tests in 0.026937s, 37.1236 tests/s, 74.2471 assertions/s.